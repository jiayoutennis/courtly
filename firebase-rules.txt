rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read any user
      allow read: if request.auth != null && 
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'courtly'
        );
      
      // Any club admin can update the organization field of any user
      // This grants admins the ability to approve members to their club
      allow update: if request.auth != null &&
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'courtly'
        ) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['organization', 'updatedAt']);
    }
    
    // Reservation rules
    match /reservations/{reservationId} {
      // Users can read/write their own reservations
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Club members can read their club's reservations
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organization == resource.data.clubId;
      
      // Admins can read/write reservations for their club
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' &&
        resource.data.clubId == request.auth.uid;
    }
    
    // Public Clubs collection - Allow reading approved clubs
    match /publicClubs/{clubId} {
      // Anyone can read approved clubs
      allow read: if request.auth != null;
      
      // Allow anyone authenticated to create clubs (not update or delete)
      allow create: if request.auth != null;
      
      // Allow both admins and courtly staff to manage clubs
      allow update, delete: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'courtly'
        );
    }
    
    // Club Join Requests collection
    match /clubJoinRequests/{requestId} {
      // Club admins can read/update/delete requests for THEIR club only
      allow read, update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organization == resource.data.clubId;
      
      // Courtly admins can read/update/delete ALL requests
      allow read, update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'courtly';
      
      // Users can create join requests and read their own
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Club Submissions collection
    match /clubSubmissions/{submissionId} {
      // Any authenticated user can create submissions
      allow create: if request.auth != null;
      
      // Users can read/update their own submissions
      allow read, update: if request.auth != null && 
        resource.data.submittedBy == request.auth.uid;
      
      // Admins can read AND DELETE all submissions
      allow read, delete: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'courtly');
    }
    
    // Allow admins full access to database (for admin panel)
    match /{document=**} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'developer' || 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        );
    }
  }
}